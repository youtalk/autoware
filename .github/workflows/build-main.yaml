name: build-main

on:
  schedule:
    - cron: 0 12 * * *
  workflow_dispatch:
    inputs:
      artifacts-destination:
        type: choice
        description: Built images will be saved as tarball
        options:
          - tarball
        default: tarball

jobs:
  load-env:
    uses: ./.github/workflows/load-env.yaml

  build-main:
    needs: load-env
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        name:
          - no-cuda
          - cuda
        include:
          - name: no-cuda
            base_image_env: base_image
            lib_dir: x86_64
            setup-args: --no-nvidia
            additional-tag-suffix: ""
          - name: cuda
            base_image_env: base_image
            lib_dir: x86_64
            additional-tag-suffix: -cuda
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Free disk space
        uses: ./.github/actions/free-disk-space

      - name: Build 'autoware-universe'
        uses: ./.github/actions/docker-build-and-push
        with:
          bake-target: autoware-openadk
          build-args: |
            *.platform=linux/amd64
            *.args.ROS_DISTRO=${{ needs.load-env.outputs.rosdistro }}
            *.args.BASE_IMAGE=${{ needs.load-env.outputs[format('{0}', matrix.base_image_env)] }}
            *.args.SETUP_ARGS=${{ matrix.setup-args }}
            *.args.LIB_DIR=${{ matrix.lib_dir }}
            *.cache-from=type=registry,ref=ghcr.io/${{ github.repository }}:buildcache-${{ matrix.name }}
            *.cache-to=type=registry,ref=ghcr.io/${{ github.repository }}:buildcache-${{ matrix.name }},mode=max
          tag-suffix: ${{ matrix.additional-tag-suffix }}-amd64
          tag-prefix: ${{ needs.load-env.outputs.rosdistro }}
          allow-push: false

      - name: Show disk space
        run: |
          df -h
