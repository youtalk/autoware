# EVENTS: push, schedule, workflow_dispatch
# workflow_dispatch: Build all. No publish to registry; save as tarball.
# schedule: Build only devel and prebuilt. TAGS: date, latest
# push-branch: Build only devel and prebuilt. TAGS: date, latest
# push-tag: Build all. TAGS: version, date, latest

name: docker-build-and-push-main

on:
  pull_request:
  workflow_dispatch:
    inputs:
      artifacts-destination:
        type: choice
        description: Destination for the artifacts
        options:
          - registry
          - tarball
        default: tarball

jobs:
  load-env:
    uses: ./.github/workflows/load-env.yaml

  docker-build-and-push-main:
    needs: load-env
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Set git config
        uses: autowarefoundation/autoware-github-actions/set-git-config@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install jq and vcstool
        run: |
          sudo apt-get -y update
          sudo apt-get -y install jq python3-pip
          pip install --no-cache-dir vcstool
        shell: bash

      - name: Run vcs import
        run: |
          mkdir src
          vcs import src < autoware.repos
        shell: bash

      - name: Cache
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            root-ccache
            var-cache-apt
            var-lib-apt
          key: cache-${{ hashFiles('Dockerfile') }}
          restore-keys: |
            cache-

      - name: inject cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v3.1.0
        with:
          cache-map: |
            {
              "root-ccache": "/root/.ccache",
              "var-cache-apt": "/var/cache/apt",
              "var-lib-apt": "/var/lib/apt"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:buildcache-${{ github.head_ref }}
          cache-to: type=registry,ref=ghcr.io/${{ github.repository }}:buildcache-${{ github.head_ref }},mode=max
          tags: ${{ steps.meta.outputs.tags }}
